name: 'Backend CD pipeline'
on:
  workflow_dispatch:
  push:
    paths:
      - 'starter/backend/**'
    branches:
      - main
env:
  working_dir: 'starter/backend'
  region: ${{secrets.AWS_REGION}}
  cluster_name: ${{ secrets.CLUSTER_NAME }}
  backend_ecr: ${{ secrets.BACKEND_ECR }}
  kubectl_version: 'v1.29.3'
  IMAGE_TAG: ${GITHUB_SHA::7}
jobs:
  lint-test-deploy:
    name: 'Lint, Test and Build'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ${{ env.working_dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python and cache
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pipenv'
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Install dependencies
        run: pipenv install --dev
      - name: Run lint
        run: pipenv run lint
      - name: Run test
        run: pipenv run test
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.region }}

      - name: Setup kubectl 
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.kubectl_version }}
      
      - name: Run docker build
        run: docker build --tag=backend:${{ env.IMAGE_TAG }} .
      - name: Tag Docker image
        run: |
          docker tag backend:${{ env.IMAGE_TAG }} ${{ env.backend_ecr }}:${{ env.IMAGE_TAG }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Push Docker image to ECR
        run: docker push ${{ env.backend_ecr }}:${{ env.IMAGE_TAG }}
      - name: Deploy to EKS
        run: |
          cd k8s/
          aws eks update-kubeconfig --name ${{ env.cluster_name }} --region ${{ env.region }}
          kustomize edit set image backend=${{ env.backend_ecr }}:${{ env.IMAGE_TAG }}
          kustomize build | kubectl apply -f -
