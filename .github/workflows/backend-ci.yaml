name: 'Backend CI pipeline'
on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'starter/backend/**'
    branches:
      - main
env:
  working-dir: 'starter/backend'
jobs:
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.working-dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python and cache
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pipenv'
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Install dependencies
        run: pipenv install --dev
      - name: Run lint
        run: pipenv run lint

  test:
    name: 'Test'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.working-dir }} 

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python and cache
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pipenv'
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Install dependencies
        run: pipenv install --dev
      - name: Run test
        run: pipenv run test

  build:
    name: 'Build'
    permissions:
      pull-requests: write
    needs: ['lint', 'test']
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.working-dir }} 

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python and cache
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pipenv'
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - name: Install dependencies
        run: pipenv install --dev
      - name: Run docker build
        run: docker build --tag mp-backend:latest .
      - name: Add Pipeline success comment to PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            :white_check_mark: Backend pipeline ran sucessfully
      - name: Add Pipeline failure comment to PR
        if: ${{ failure() && github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            :x: Backend pipeline failed
