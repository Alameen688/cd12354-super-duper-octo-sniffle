name: 'Frontend CD pipeline'
on:
  workflow_dispatch:
  push:
    paths:
      - 'starter/frontend/**'
    branches:
      - main
env:
  working-dir: 'starter/frontend'
jobs:
  lint-test-deploy:
    name: 'Lint, Test and Build'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ${{ env.working-dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '${{ env.working-dir }}/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint
      - name: Run test
        run: npm test
      - name: Run docker build
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:$GITHUB_SHA .
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1
          role-to-assume: ${{secrets.AWS_ROLE_TO_ASSUME}}
          role-session-name: githubci-${{ github.sha }}

      - name: Kube Auth
        run: |
          cd setup
          ./init.sh

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
            terraform_version: "1.3.9"
      - name: Terraform Initialize
        run: terraform init
        working-directory: 'setup/terraform'

      - name: Terraform Validate
        run: terraform validate 
        working-directory: 'setup/terraform'

      - name: Terraform Plan
        run: terraform plan 
        continue-on-error: true
        working-directory: 'setup/terraform'

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: 'setup/terraform'
      
      - name: Update Kubernetes manifests with new image tag
        run: |
          cd ${{ env.working-dir }}/k8s
          aws eks update-kubeconfig --name $(terraform output cluster_name) --region us-east-1
          kustomize edit set image frontend=$(terraform output frontend_ecr):${GITHUB_SHA}
          kustomize build | kubectl apply -f -

      # - name: Deploy to Kubernetes
      #   uses: azure/k8s-deploy@v4
      #   with:
      #     manifests: |
      #       k8s/kustomization.yml
      #     namespace: 'my-app'
      - name: Terraform Destroy
        run:  terraform plan -destroy
        working-directory: 'setup/terraform'
  # terraform: