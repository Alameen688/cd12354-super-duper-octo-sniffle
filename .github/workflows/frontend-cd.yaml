name: 'Frontend CD pipeline'
on:
  workflow_dispatch:
  push:
    paths:
      - 'starter/frontend/**'
    branches:
      - main
env:
  working-dir: 'starter/frontend'
jobs:
  lint-test-deploy:
    name: 'Lint, Test and Build'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.working-dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '${{ env.working-dir }}/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint
      - name: Run test
        run: npm test
      - name: Run docker build
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:$GITHUB_SHA .
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
      #     aws-region: us-east-1

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v2

      # - name: Terraform Initialize
      #   run: terraform init

      # - name: Terraform Validate
      #   run: terraform validate 

      # - name: Terraform Plan
      #   run: terraform plan 
      #   continue-on-error: true

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -auto-approve

      # - name: Terraform Destroy
      #   run:  terraform plan -destroy
  # terraform: