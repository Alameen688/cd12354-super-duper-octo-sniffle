name: 'Frontend CD pipeline'
on:
  workflow_dispatch:
  push:
    paths:
      - 'starter/frontend/**'
    branches:
      - main
env:
  working-dir: 'starter/frontend'
  region: 'us-east-1'
jobs:
  lint-test-deploy:
    name: 'Lint, Test and Build'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ${{ env.working-dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '${{ env.working-dir }}/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint
      - name: Run test
        run: npm test
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: ${{ env.region }}
          # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          # role-session-name: githubci-${{ github.sha }}

      - name: Setup kubectl 
        uses: azure/setup-kubectl@v3
        # with:
        #   version: '<version>' # default is latest stable
      # - name: Deploy to Kubernetes
      #   uses: azure/k8s-deploy@v4
      #   # working-directory: ${{ env.working-dir }}/k8s
      #   with:
      #     manifests: |
      #       k8s/kustomization.yml
      #     namespace: 'my-app'
      - name: Run docker build
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=registry-exercise:$GITHUB_SHA .
      - name: Tag Docker image
        run: |
          docker tag registry-exercise:$GITHUB_SHA 811968594092.dkr.ecr.us-east-1.amazonaws.com/registry-exercise:$GITHUB_SHA
      - name: Push Docker image to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 811968594092.dkr.ecr.us-east-1.amazonaws.com
          docker push 811968594092.dkr.ecr.us-east-1.amazonaws.com/registry-exercise:$GITHUB_SHA

      - name: Deploy to EKS
        run: |
          cd k8s/
          aws eks update-kubeconfig --name registry-exercise
          kubectl apply -f - --validate=false

      # - name: Deploy to EKS with Kustomize
      #   run: |
      #     cd k8s/
      #     kustomize build | kubectl apply -f - --validate=false

      # - name: Kube Auth
      #   run: ./init.sh

      # - name: Update Kubernetes manifests with new image tag
      #   run: |
      #     cd ${{ env.working-dir }}/k8s
      #     aws eks update-kubeconfig --name $(terraform output cluster_name) --region us-east-1
      #     kustomize edit set image frontend=$(terraform output frontend_ecr):${GITHUB_SHA}
      #     kustomize build | kubectl apply -f -
  # terraform: